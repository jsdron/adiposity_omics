select=c("SNP","CHR","BP","GENPOS","ALLELE1","BETA","gene"))
head(amit_vat)
head(test)
amit_vat <- fread('/Volumes/medpop_esp2/jdron/projects/adiposity/expandability/data/extracted_snps.50kBuffer.0321_vatadjbmi3_bgen_stats.txt',
select=c("CHR","BP","GENPOS","ALLELE1","ALLELE0","BETA"))
amit_vat$SNP_ID <- paste0(amit_vat$CHR,":",amit_vat$BP,"_",amit_vat$ALLELE1,"_", amit_vat$ALLELE0)
head(amit_vat)
amit_vat <- amit_vat[,c("SNP_ID", "BETA")]
# Our new GWAS sumstats
test <- subset(merged_df, merged_df$trait=="TG")
amit_vat <- fread('/Volumes/medpop_esp2/jdron/projects/adiposity/expandability/data/extracted_snps.50kBuffer.0321_vatadjbmi3_bgen_stats.txt',
select=c("CHR","BP","GENPOS","ALLELE1","ALLELE0","BETA"))
amit_vat$SNP_ID <- paste0(amit_vat$CHR,":",amit_vat$BP,"_",amit_vat$ALLELE1,"_",amit_vat$ALLELE0)
amit_vat <- amit_vat[,c("SNP_ID", "BETA")]
head(amit_vat)
# Our new GWAS sumstats
test <- subset(merged_df, merged_df$trait=="TG")
amit_vat <- fread('/Volumes/medpop_esp2/jdron/projects/adiposity/expandability/data/extracted_snps.50kBuffer.0321_vatadjbmi3_bgen_stats.txt',
select=c("CHR","BP","GENPOS","ALLELE1","ALLELE0","BETA"))
amit_vat$SNP_ID <- paste0(amit_vat$CHR,":",amit_vat$BP,"_",amit_vat$ALLELE1,"_",amit_vat$ALLELE0)
amit_vat <- amit_vat[,c("SNP_ID", "BETA")]
test <- merge(test, amit_vat, by="SNP_ID")
ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, asat, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A", "B")))
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A", "B")))
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A", "B")))
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A", "B")))
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A", "B")))
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A", "B")))
# Fit linear model to get R2 and p-value
model <- lm(BETA ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
a <- ggplot(test,
aes(x = BETA_GFAT, y = BETA, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (Amit's VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
# Fit linear model to get R2 and p-value
model <- lm(BETA_VAT ~ BETA_GFAT, data = test)
summary_model <- summary(model)
r_squared <- summary_model$r.squared
p_value <- summary_model$coefficients[2, 4]
# Convert p-value to a format for plotting
p_value_text <- format(p_value, digits = 3, scientific = TRUE)
r_squared_text <- format(r_squared, digits = 3)
b <- ggplot(test,
aes(x = BETA_GFAT, y = BETA_VAT, color = gene)) +
geom_hline(yintercept = 0, linetype = "solid", color = "#dddddd") +
geom_vline(xintercept = 0, linetype = "solid", color = "#dddddd") +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", linewidth = 0.5, colour="#dddddd") +
geom_point(size=2, show.legend=TRUE) +
scale_color_manual(values = color_list) +
theme_cowplot() +
theme(legend.position = "bottom",
legend.justification = "center") +
labs(x=paste0("Effect size (out GFATadjBMI)"), y=paste0("Effect size (our VATadjBMI)"), color="", title="") +
annotate("text", x = Inf, y = Inf, label = paste0("R² = ", r_squared_text, "\n", "p = ", p_value_text),
hjust = 1.1, vjust = 2, size = 5, color = "black") +
geom_smooth(method='lm', formula= y~x, aes(group=1), fullrange = TRUE,colour="black")
annotate_figure(ggarrange(a, b, nrow=1, common.legend = TRUE, legend="bottom", labels = c("A) Amit's GWAS", "B) Our GWAS")))
##### 00 - LIBRARIES #####
library(data.table)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(cowplot)
library(gridExtra)
library(ggpubr)
library(RColorBrewer)
setwd('/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/')
##### 01 - FUNCTIONS #####
## Generate a smaller dataframe for plotting purposes ##
# https://danielroelfs.com/blog/how-i-create-manhattan-plots-using-ggplot/
plot_df <- function(df, P, frac) {
sig_data <- df %>% subset(P < 0.05)
notsig_data <- df %>% subset(P >= 0.05) %>% group_by(CHR) %>%
sample_frac(frac) # lower fraction, fewer data points
return(bind_rows(sig_data, notsig_data))
rm(sig_data)
rm(notsig_data)
}
## Calculate lambda ##
inflation <- function(pval) {
lambda <- median(qchisq(1 - pval, 1), na.rm = T)/qchisq(0.5,1)
lambda <- round(lambda, 2)
return(lambda)
}
## Generate QQ plot ##
QQPlot <- function(df,title) {
### calculate lambda with the whole dataset
lambda <- inflation(df$P_BOLT_LMM)
### a plottable dataset
mini_df <- plot_df(df,"P_BOLT_LMM", 0.1)
### create QQ plot
pval <- mini_df$P[!is.na(mini_df$P_BOLT_LMM)]
n <- length(pval)
x <- 1:n
dat <- data.frame(obs=sort(pval),
exp=x/n,
upper=qbeta(0.025, x, rev(x)),
lower=qbeta(0.975, x, rev(x)))
ggplot(dat, aes(-log10(exp), -log10(obs))) +
geom_line(aes(-log10(exp), -log10(upper)), color="gray") +
geom_line(aes(-log10(exp), -log10(lower)), color="gray") +
geom_point() +
geom_abline(intercept=0, slope=1, color="red") +
xlab(expression(paste(-log[10], "(expected P)"))) +
ylab(expression(paste(-log[10], "(observed P)"))) +
ggtitle(title) +
theme_cowplot() +
annotate(
geom = "text",
x = -Inf,
y = Inf,
hjust = -0.15,
vjust = 1 + 0.15 * 3,
label = sprintf("Lambda = %.2f", lambda),
size = 8
)
}
## Create dataframe for manhattan plot ##
### Prepare dataframe for plotting ###
man_prep <- function(gwas_df) {
data_cum <- gwas_df %>%
group_by(CHR) %>%
summarise(max_bp = max(BP)) %>%
mutate(bp_add = lag(cumsum(as.numeric(max_bp)), default = 0)) %>%
select(CHR, bp_add)
tmp <- gwas_df %>% inner_join(data_cum, by = "CHR") %>%
mutate(bp_cum = BP + bp_add)
tmp$CHR <- factor(tmp$CHR, levels = c('1','2','3','4','5','6','7','8','9',
'10','11','12','13','14','15','16','17','18','19',
'20','21','22'))
return(tmp)
rm(tmp)
}
## Generate Manhattan Plot ##
plot_man <- function(mini_df, P, sig_value, y_lim, main_title){
axis_set <- mini_df %>% group_by(CHR) %>% summarize(center = mean(bp_cum))
if (is.na(y_lim)) {
ylim <- mini_df %>%
filter(.data[[P]] == min(.data[[P]]))  %>%
mutate(ylim = abs(floor(log10(.data[[P]]))) + 2) %>%
pull(ylim)
} else {ylim <- y_lim}
# https://r-graph-gallery.com/101_Manhattan_plot.html
ggplot(mini_df, aes(x=bp_cum, y=-log10(.data[[P]]))) +
# Show all points
geom_point(aes(color = as.factor(CHR)), alpha=0.75, size=1.3) +
scale_color_manual(values = rep(c("grey", "skyblue"), unique(length(axis_set$CHR)))) +
# Significance threshold
geom_hline(yintercept = -log10(sig_value), color = "grey40", linetype = "dashed") +
# Custom X axis:
scale_x_continuous(label = axis_set$CHR, breaks = axis_set$center ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, ylim)) + # remove space between plot area and x axis
# Titles
labs(title = main_title, x = "Chromosome", y = paste0("-log10(",P,")")) +
# Custom the theme:
theme_cowplot() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
}
##### 02 - VARIABLE PREP #####
# changing the date so that I am using the files that have been subsetted down usin g15a_postGWAS_QC.R
depots <- c("vatadjbmi3.noProt.EUR.2024-07-30", "asatadjbmi3.noProt.EUR.2024-07-30", "gfatadjbmi3.noProt.EUR.2024-07-30",
"vatadjbmi3.noMetab.EUR.2024-07-30", "asatadjbmi3.noMetab.EUR.2024-07-30", "gfatadjbmi3.noMetab.EUR.2024-07-30")
##### 03 - FIGURES #####
for (i in 1:length(depots)){
sumstat <- fread(paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/working_files/",depots[i],".bgen.stats.gz"))
sumstat <- subset(sumstat, sumstat$INFO>0.3 & sumstat$A1FREQ>=0.005) # these are the thresholds that Saaket used
# QQ PLOT
print(inflation(sumstat))
png(file=paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/QC_figures/QQ_plot.",depots[i],".png"), width=800, height=800, res=200)
print(QQPlot(sumstat, depots))
dev.off()
# MANHATTAN PLOT
mini_df <- plot_df(sumstat, "P_BOLT_LMM", 0.05)
mini_df <- man_prep(mini_df)
max(-log10(mini_df$P_BOLT_LMM))
png(file=paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/QC_figures/Manhattan_plot.",depots[i],".png"), width=1600, height=800, res=200)
print(plot_man(mini_df, "P_BOLT_LMM", 5e-8, NA, depots))
dev.off()
}
print(inflation(sumstat))
str(sumstat)
# QQ PLOT
print(inflation(sumstat$P_BOLT_LMM))
##### 03 - FIGURES #####
for (i in 1:length(depots)){
sumstat <- fread(paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/working_files/",depots[i],".bgen.stats.gz"))
sumstat <- subset(sumstat, sumstat$INFO>0.3 & sumstat$A1FREQ>=0.005) # these are the thresholds that Saaket used
write.table(sumstat,
file = gzfile(paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/working_files/",depots[i],".filtered_INFO-0.3_MAF-0.005.bgen.stats.gz")),
append = FALSE, sep = "\t", dec = ".", col.names = TRUE, row.names = FALSE, quote = FALSE)
# Make the dataframe smaller
sumstat <- sumstat[,-c("P_BOLT_LMM_INF", "INFO", "A1FREQ", "GENPOS", "SE", "BETA")]
# QQ PLOT
print(inflation(sumstat$P_BOLT_LMM))
png(file=paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/QC_figures/QQ_plot.",depots[i],".png"), width=800, height=800, res=200)
print(QQPlot(sumstat, depots))
dev.off()
# MANHATTAN PLOT
mini_df <- plot_df(sumstat, "P_BOLT_LMM", 0.05)
mini_df <- man_prep(mini_df)
max(-log10(mini_df$P_BOLT_LMM))
png(file=paste0("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/GWAS/bolt_lmm/QC_figures/Manhattan_plot.",depots[i],".png"), width=1600, height=800, res=200)
print(plot_man(mini_df, "P_BOLT_LMM", 5e-8, NA, depots))
dev.off()
}
