GFAT_rev <- rev_mr %>% filter(id.exposure == "GFAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome),
y = b, ymin = lo_ci, ymax = up_ci,
color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = TRUE) +
scale_color_manual(values = c("IVW" = gfat_colors[1], "MR Egger" = gfat_colors[2], "MR-RAPS" = gfat_colors[3])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance",
title = "Exposure: Fat depot\nOutcome: Metabolite") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free") +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "bottom",
legend.justification = "center",
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Combine metab_plots
metab_plots <- ggarrange(GFAT_fwd, GFAT_rev, ncol = 2, labels = c("A", "B"),
legend = "bottom", common.legend = TRUE)
# New colour palettes with an extra colour
asat_colors <- generate_palette2("#ECB41F")
gfat_colors <- generate_palette2("#2883B1")
vat_colors  <- generate_palette2("#C84D4C")
# Load data
prot_linker <- fread("/Volumes/medpop_esp2/mpan/Projects/Adiposity/Adiposity_Omics/data/olink_protein_map_3k.tsv")
mr_all_prot <- fread("/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/MR_nonoverlap_fixed/estimates/for_analysis/proteins/all_merged_MR_results.2025-03-05.tsv")
mr_all_prot$analysis <- ifelse(mr_all_prot$method %in% c("Inverse variance weighted (correlation inc)", "Wald ratio (correlation inc)", "Wald ratio"), "Primary", "Secondary")
mr_all_prot <- mr_all_prot %>% mutate(significance = ifelse(pval < 0.05, "Significant", "Not Significant"))
mr_all_prot$label <- paste0(mr_all_prot$id.exposure, "_", mr_all_prot$id.outcome)
input_date <- "20250127"
epi <- fread(paste0('/Volumes/medpop_esp2/jdron/projects/adiposity/adiposity_omics/results/lmResults_adi_prot.n5023.', input_date, '.tsv.gz'))
epi$sig <- ifelse(epi$p.value < 0.05 / (41 + 445), "sig", "ns")
epi$adi_label <- ifelse(epi$outcome == "vatadjbmi3", "VAT",
ifelse(epi$outcome == "asatadjbmi3", "ASAT", "GFAT"))
epi$label <- paste0(epi$term, "_", epi$adi_label)
epi_sig <- subset(epi, epi$sig == "sig")
mr_all_prot <- subset(mr_all_prot, mr_all_prot$label %in% epi_sig$label)
# Forward MR
sig_IVW <- subset(mr_all_prot, significance == "Significant" & analysis == "Primary")
sig_df <- subset(mr_all_prot, label %in% sig_IVW$label)
sig_df <- subset(sig_df, method != "Egger intercept (correlation inc)")
robust_df <- sig_df %>%
group_by(label) %>%
filter(all(b > 0) | all(b < 0)) %>%
ungroup()
robust_df$method <- ifelse(robust_df$method == "Inverse variance weighted (correlation inc)", "IVW",
ifelse(robust_df$method == "Egger (correlation inc)", "MR Egger",
ifelse(robust_df$method == "MR Raps", "MR-RAPS",
ifelse(robust_df$method == "Wald ratio", "Wald Ratio", "Other"))))
epi_robust <- epi[, c("label", "estimate", "p.value")]
merge_df <- merge(robust_df, epi_robust, by = "label")
merge_df <- merge_df[sign(merge_df$estimate) == sign(merge_df$b), ]
merge_df$label2 <- paste0(merge_df$label, "_", merge_df$method)
merge_df <- merge_df %>% distinct(label2, .keep_all = TRUE)
merge_df$method <- factor(merge_df$method, levels = c("IVW", setdiff(unique(merge_df$method), "IVW")))
merge_df <- subset(merge_df, !(label %in% merge_df$label[merge_df$pval >= 0.05]))
# Legend
dummy <- merge_df
dummy[5, "significance"] <- "Not Significant"
legend_plot <- ggplot(dummy, aes(x = id.exposure, y = b, color = method, shape = significance, fill = significance)) +
geom_point() + theme_bw() +
theme(legend.position = "bottom", legend.justification = "center", legend.box = "vertical", legend.text = element_text(size = 11), legend.margin = margin()) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
scale_color_manual(values = c("IVW" = vat_colors[1], "MR Egger" = vat_colors[2], "MR-RAPS" = vat_colors[3], "Wald Ratio" = vat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white"))
combined_legend <- get_legend(legend_plot)
# Forward MR plots for each fat depot
VAT <- merge_df %>% filter(id.outcome == "VAT") %>%
ggplot(aes(x = reorder_within(id.exposure, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = TRUE) +
scale_color_manual(values = c("IVW" = vat_colors[1], "MR Egger" = vat_colors[2], "MR-RAPS" = vat_colors[3], "Wald Ratio" = vat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.outcome, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.exposure))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.1, -0.4, "cm"))
GFAT <- merge_df %>% filter(id.outcome == "GFAT") %>%
ggplot(aes(x = reorder_within(id.exposure, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = FALSE) +
scale_color_manual(values = c("IVW" = gfat_colors[1], "MR Egger" = gfat_colors[2], "MR-RAPS" = gfat_colors[3], "Wald Ratio" = gfat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.outcome, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.exposure))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.1, -0.4, "cm"))
ASAT <- merge_df %>% filter(id.outcome == "ASAT") %>%
ggplot(aes(x = reorder_within(id.exposure, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = FALSE) +
scale_color_manual(values = c("IVW" = asat_colors[1], "MR Egger" = asat_colors[2], "MR-RAPS" = asat_colors[3], "Wald Ratio" = asat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.outcome, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.exposure))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.3, -0.4, "cm"))
plots_fwd <- annotate_figure(ggarrange(VAT, ggarrange(ASAT, GFAT, nrow = 2), ncol = 2),
top = text_grob("Exposure: Protein\nOutcome: Fat depot", face = "bold", size = 14))
print(plots_fwd)
rev_mr <- fread("/Volumes/medpop_esp2/mpan/Projects/Adiposity/Adiposity_Omics/results/MR/ADIPOSE_PROT_twosample/all_outcomes_mr_results_2025-03-12.csv")
rev_mr$label <- paste0(rev_mr$id.outcome, "_", rev_mr$id.exposure)
rev_mr <- subset(rev_mr, label %in% merge_df$label)
rev_mr$significance <- ifelse(rev_mr$pval <= 0.05 / threshold, "Significant", "Not Significant")
rev_mr <- subset(rev_mr, method != "Egger intercept (correlation inc)")
rev_mr$method <- ifelse(rev_mr$method == "Inverse variance weighted (correlation inc)", "IVW",
ifelse(rev_mr$method == "Egger (correlation inc)", "MR Egger",
ifelse(rev_mr$method == "MR Raps", "MR-RAPS",
ifelse(rev_mr$method == "Wald ratio", "Wald Ratio", ""))))
rev_mr$method <- factor(rev_mr$method, levels = c("IVW", setdiff(unique(rev_mr$method), "IVW")))
# Reverse MR plots
VAT_rev <- rev_mr %>% filter(id.exposure == "VAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = TRUE) +
scale_color_manual(values = c("IVW" = vat_colors[1], "MR Egger" = vat_colors[2], "MR-RAPS" = vat_colors[3], "Wald Ratio" = vat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.outcome))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.1, -0.4, "cm"))
GFAT_rev <- rev_mr %>% filter(id.exposure == "GFAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = FALSE) +
scale_color_manual(values = c("IVW" = gfat_colors[1], "MR Egger" = gfat_colors[2], "MR-RAPS" = gfat_colors[3], "Wald Ratio" = gfat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.outcome))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.1, -0.4, "cm"))
ASAT_rev <- rev_mr %>% filter(id.exposure == "ASAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = FALSE) +
scale_color_manual(values = c("IVW" = asat_colors[1], "MR Egger" = asat_colors[2], "MR-RAPS" = asat_colors[3], "Wald Ratio" = asat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.outcome))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.3, -0.4, "cm"))
plots_rev <- annotate_figure(ggarrange(VAT_rev, ggarrange(ASAT_rev, GFAT_rev, nrow = 2), ncol = 2),
top = text_grob("Exposure: Fat depot\nOutcome: Protein", face = "bold", size = 14))
print(plots_rev)
sig <- subset(rev_mr, rev_mr$significance=="Significant")
View(sig)
View(rev_mr)
# Reverse MR
rev_mr <- fread("/Volumes/medpop_esp2/mpan/Projects/Adiposity/Adiposity_Omics/results/MR/ADIPOSE_MET_twosample/all_outcomes_mr_results_Adipose-MET_unique2025-03-16.csv")
rev_mr$label <- paste0(rev_mr$id.outcome, "_", rev_mr$id.exposure)
# Subset down to candidates
rev_mr <- subset(rev_mr, label %in% merge_df$label)
# Reverse MR
rev_mr <- fread("/Volumes/medpop_esp2/mpan/Projects/Adiposity/Adiposity_Omics/results/MR/ADIPOSE_MET_twosample/all_outcomes_mr_results_Adipose-MET_unique2025-03-16.csv")
rev_mr$label <- paste0(rev_mr$id.outcome, "_", rev_mr$id.exposure)
rev_mr <- fread("/Volumes/medpop_esp2/mpan/Projects/Adiposity/Adiposity_Omics/results/MR/ADIPOSE_PROT_twosample/all_outcomes_mr_results_2025-03-12.csv")
rev_mr$label <- paste0(rev_mr$id.outcome, "_", rev_mr$id.exposure)
rev_mr <- subset(rev_mr, label %in% merge_df$label)
rev_mr$significance <- ifelse(rev_mr$pval <= 0.05, "Significant", "Not Significant")
rev_mr <- subset(rev_mr, method != "Egger intercept (correlation inc)")
rev_mr$method <- ifelse(rev_mr$method == "Inverse variance weighted (correlation inc)", "IVW",
ifelse(rev_mr$method == "Egger (correlation inc)", "MR Egger",
ifelse(rev_mr$method == "MR Raps", "MR-RAPS",
ifelse(rev_mr$method == "Wald ratio", "Wald Ratio", ""))))
rev_mr$method <- factor(rev_mr$method, levels = c("IVW", setdiff(unique(rev_mr$method), "IVW")))
# Reverse MR plots
VAT_rev <- rev_mr %>% filter(id.exposure == "VAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = TRUE) +
scale_color_manual(values = c("IVW" = vat_colors[1], "MR Egger" = vat_colors[2], "MR-RAPS" = vat_colors[3], "Wald Ratio" = vat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.outcome))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.1, -0.4, "cm"))
GFAT_rev <- rev_mr %>% filter(id.exposure == "GFAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = FALSE) +
scale_color_manual(values = c("IVW" = gfat_colors[1], "MR Egger" = gfat_colors[2], "MR-RAPS" = gfat_colors[3], "Wald Ratio" = gfat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.outcome))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.1, -0.4, "cm"))
ASAT_rev <- rev_mr %>% filter(id.exposure == "ASAT") %>%
ggplot(aes(x = reorder_within(id.outcome, b, within = id.outcome), y = b, ymin = lo_ci, ymax = up_ci, color = method, shape = significance, fill = significance)) +
geom_pointrange(position = position_dodge(width = 0.7), show.legend = FALSE) +
scale_color_manual(values = c("IVW" = asat_colors[1], "MR Egger" = asat_colors[2], "MR-RAPS" = asat_colors[3], "Wald Ratio" = asat_colors[4])) +
scale_shape_manual(values = c("Significant" = 16, "Not Significant" = 21)) +
scale_fill_manual(values = c("Significant" = NA, "Not Significant" = "white")) +
labs(y = "Effect estimate (95% CI)", x = "", color = "MR Method", fill = "Significance", shape = "Significance") +
theme_bw() +
facet_wrap(~id.exposure, scales = "free", drop = TRUE, ncol = length(unique(robust_df$id.outcome))) +
scale_x_reordered() +
coord_flip() +
geom_hline(yintercept = 0, lty = 2) +
theme(legend.position = "none", axis.title = element_text(size = 12), axis.text = element_text(size = 8), plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
panel.background = element_rect(fill = "white", color = NA), plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.margin = margin(0, 0.1, 0.3, -0.4, "cm"))
plots_rev <- annotate_figure(ggarrange(VAT_rev, ggarrange(ASAT_rev, GFAT_rev, nrow = 2), ncol = 2),
top = text_grob("Exposure: Fat depot\nOutcome: Protein", face = "bold", size = 14))
print(plots_rev)
###### LIBRARIES ######
library(data.table)
library(tidyr)
library(dplyr)
library(ggplot2)
library(cowplot)
library(ggpubr)
library(broom)
library(meta)
library(cmprsk)
library(survival)
library(survminer)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(extrafont)
font_import()  # This imports all available fonts to R
###### SET VARIABLES ######
exposures <- c("THBS2", # ASAT (FWD)
"ABL1", "CCL17", "MSR1", "CFB", "KHK", "TSPAN8", "SELPLG", "ANXA2", "ASAH2", "ADAMTSL5", "SHBG", "ITGB6", # VAT (FWD)
"SHBG", "LPL", "IL2RA", "TREH", "FCAMR", "NFASC") # GFAT (FWD)
event_names <- c('t2d', 'cad')
covar <- c("enroll_age", "sex")
covariates <- paste(covar, collapse = " + ")
threshold <- 0.05/length(exposures)
###### PREPARE DATAFRAME ######
prot <- data.frame(fread('/Volumes/medpop_esp2/projects/UK_Biobank/baskets/ukb672544/olink_data3k.txt.gz'))
names_prot <- data.frame(fread('/Volumes/medpop_esp2/projects/UK_Biobank/baskets/ukb672544/coding143.tsv')) # Load linker file to assign protein names
names_prot <- separate(names_prot, meaning, into = c("short_name", "long_name"), sep = ";")
prot <- prot[prot$ins_index == 0, !(names(prot) %in% "ins_index")]
# Make dataframe wide
prot <- as.data.frame(pivot_wider(prot, names_from = protein_id, values_from = result))
names_prot$coding <- as.character(names_prot$coding)
setnames(prot, old = names_prot$coding, new = names_prot$short_name, skip_absent = TRUE)
# Only keep the relevant columns
prot <- prot[, colnames(prot) %in% c("eid", exposures)]
diseases <- fread("/Volumes/medpop_esp2/jdron/projects/adiposity/bri/input/BRI_epi.2025-02-05.tsv",
select=c("eid", "sex", "enroll_age", "BMI" , "knn",
"incd_t2d", "prev_t2d", "censor_age_t2d",
"incd_cad", "prev_cad", "censor_age_cad"))
main <- merge(prot, diseases, by = "eid") #
rm(prot, diseases)
withdrawn <- fread('/Volumes/medpop_esp2/projects/UK_Biobank/withdrawn_samples/w7089_2023-08-21.csv')
colnames(withdrawn)[1] <- "eid"
withdrawn_vector <- c(withdrawn$eid)
main <- main[!(main$eid %in% withdrawn_vector),]
rm(withdrawn, withdrawn_vector)
# Restrict to white only
# Restrict to white only
main <- subset(main, knn == "EUR")
prot <- data.frame(fread('/Volumes/medpop_esp2/projects/UK_Biobank/baskets/ukb672544/olink_data3k.txt.gz'))
names_prot <- data.frame(fread('/Volumes/medpop_esp2/projects/UK_Biobank/baskets/ukb672544/coding143.tsv')) # Load linker file to assign protein names
names_prot <- separate(names_prot, meaning, into = c("short_name", "long_name"), sep = ";")
# Select only those with baseline protein measurements
prot <- prot[prot$ins_index == 0, !(names(prot) %in% "ins_index")]
# Make dataframe wide
prot <- as.data.frame(pivot_wider(prot, names_from = protein_id, values_from = result))
names_prot$coding <- as.character(names_prot$coding)
setnames(prot, old = names_prot$coding, new = names_prot$short_name, skip_absent = TRUE)
# Only keep the relevant columns
prot <- prot[, colnames(prot) %in% c("eid", exposures)]
diseases <- fread("/Volumes/medpop_esp2/jdron/projects/adiposity/bri/input/BRI_epi.2025-02-05.tsv",
select=c("eid", "sex", "enroll_age", "BMI" , "knn",
"incd_t2d", "prev_t2d", "censor_age_t2d",
"incd_cad", "prev_cad", "censor_age_cad"))
main <- merge(prot, diseases, by = "eid") #
rm(prot, diseases)
withdrawn <- fread('/Volumes/medpop_esp2/projects/UK_Biobank/withdrawn_samples/w7089_2023-08-21.csv')
colnames(withdrawn)[1] <- "eid"
withdrawn_vector <- c(withdrawn$eid)
main <- main[!(main$eid %in% withdrawn_vector),]
rm(withdrawn, withdrawn_vector)
names(main)
diseases <- fread("/Volumes/medpop_esp2/jdron/projects/adiposity/bri/input/BRI_epi.2025-02-05.tsv")
names(diseases)
prot <- data.frame(fread('/Volumes/medpop_esp2/projects/UK_Biobank/baskets/ukb672544/olink_data3k.txt.gz'))
names_prot <- data.frame(fread('/Volumes/medpop_esp2/projects/UK_Biobank/baskets/ukb672544/coding143.tsv')) # Load linker file to assign protein names
names_prot <- separate(names_prot, meaning, into = c("short_name", "long_name"), sep = ";")
# Select only those with baseline protein measurements
prot <- prot[prot$ins_index == 0, !(names(prot) %in% "ins_index")]
# Make dataframe wide
prot <- as.data.frame(pivot_wider(prot, names_from = protein_id, values_from = result))
names_prot$coding <- as.character(names_prot$coding)
setnames(prot, old = names_prot$coding, new = names_prot$short_name, skip_absent = TRUE)
# Only keep the relevant columns
prot <- prot[, colnames(prot) %in% c("eid", exposures)]
diseases <- fread("/Volumes/medpop_esp2/jdron/projects/adiposity/bri/input/BRI_epi.2025-02-05.tsv",
select=c("eid", "sex", "enroll_age", "BMI" , "knn",
"incd_t2d", "prev_t2d", "censor_age_t2d",
"incd_cad", "prev_cad", "censor_age_cad",
"PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10"))
main <- merge(prot, diseases, by = "eid") #
rm(prot, diseases)
withdrawn <- fread('/Volumes/medpop_esp2/projects/UK_Biobank/withdrawn_samples/w7089_2023-08-21.csv')
colnames(withdrawn)[1] <- "eid"
withdrawn_vector <- c(withdrawn$eid)
main <- main[!(main$eid %in% withdrawn_vector),]
rm(withdrawn, withdrawn_vector)
main <- main %>%
filter(if_all(all_of(covar), ~ !is.na(.)))
no_prev_cad <- subset(main, prev_cad != 1)
no_prev_t2d <- subset(main, main$prev_t2d != 1)
main <- subset(main, prev_cad != 1 & prev_t2d != 1)
table(main$sex)
mean(main$enroll_age)
sd(main$enroll_age)
table(main$incd_cad)
median(main$censor_age_cad - main$enroll_age)
IQR(main$censor_age_cad - main$enroll_age)
table(main$incd_t2d)
median(main$censor_age_t2d - main$enroll_age)
IQR(main$censor_age_t2d - main$enroll_age)
main <- data.frame(main)
for (i in (which(colnames(main) == "FCAMR"):which(colnames(main) == "ANXA2"))) {
main[,colnames(main)[i]] <- scale(as.numeric(as.matrix(main[,i])))
}
###### COXPH MODEL ######
results_df <- data.frame()
for (i in 1:length(event_names)){
disease_name <- event_names[i]
incd_event <- paste0("incd_", event_names[i])
# Loop through each exposure and run a separate model for each
for (exposure in exposures) {
# Remove people with missing important variables
no_prev <- main %>%
filter(if_all(all_of(exposure), ~ !is.na(.))) %>%
filter(if_all(all_of(covar), ~ !is.na(.)))
# Using age of enrollment
no_prev$time <- no_prev[[paste0("censor_age_", disease_name)]]
# Create formula for each exposure
exposure_formula <- as.formula(paste0("Surv(time, ", incd_event, ") ~ ", exposure, " + ", covariates))
# Run the Cox model for the current exposure
model <- coxph(exposure_formula, data = no_prev)
# Extract and tidy the model results
tidy_results <- tidy(model, conf.int = TRUE) %>%
mutate(term = exposure,
HR = exp(estimate),
lower_CI = exp(conf.low),
upper_CI = exp(conf.high)) %>%
slice(1)  # Keep only the first row with the effect for the current exposure
# Add outcome and sample size details
tidy_results <- tidy_results %>%
mutate(outcome = disease_name,
N = length(no_prev$eid),
N.e = nrow(subset(no_prev, no_prev[[incd_event]] == 1)))
tidy_results$mean_fu <- paste0(round(mean(no_prev$time), 2), " (", round(sd(no_prev$time), 2), ")")
tidy_results$male <- sum(no_prev$sex)
tidy_results$age <- paste0(round(mean(no_prev$enroll_age), 2), " (", round(sd(no_prev$enroll_age), 2), ")")
tidy_results$event_per <- paste0(tidy_results$N.e, " (", round((tidy_results$N.e/tidy_results$N)*100, 2), "%)")
# Append the results to the final dataframe
results_df <- bind_rows(results_df, tidy_results)
}
}
# Remove duplicates
results_df <- results_df %>%
group_by(term, outcome) %>%
filter(N == max(N)) %>%
ungroup()
results_df$N_label <- paste0(results_df$N.e, " / ", results_df$N)
results_df$significance <- ifelse(results_df$p.value < threshold, "Significant", "Not Significant")
results_df$outcome <- ifelse(results_df$outcome=="cad", "Coronary Artery Disease", "Type 2 Diabetes")
results_df$depot <- ifelse(results_df$term %in% c("THBS2"), "ASAT",
ifelse(results_df$term %in% c("LPL", "IL2RA", "TREH", "FCAMR", "NFASC"), "GFAT",
ifelse(results_df$term %in% c("SHBG"), "GFAT and VAT",
#ifelse(results_df$term %in% c("ITIH3", "SHBG","INHBC"), "GFAT (both) & VAT (fwd)",
"VAT")))#)
results_df <- results_df %>% distinct()
sig <- subset(results_df, significance=="Significant")
###### FOREST PLOTS ######
results_cad <- subset(results_df, results_df$outcome == "Coronary Artery Disease")
results_cad$MR_dir <- c("-","+","+","+","+","+","+","+","+","+",
"-","+ and -","-","+","+","-","-","-" )
results_t2d <- subset(results_df, results_df$outcome != "Coronary Artery Disease")
results_t2d$MR_dir <- c("-","+","+","+","+","+","+","+","+","+",
"-","+ and -","-","+","+","-","-","-" )
# Create a meta-analysis object using the metagen() function
meta_analysis_cad_prot <- metagen(
TE = estimate, # Effect size
seTE = std.error, # Standard errors of the effect sizes
studlab = term, # Study labels (terms)
byvar = depot, # Subgroup variable
sm = "HR", # Effect measure: Hazard Ratio
lower = conf.low, # Lower bound of the 95% CI
upper = conf.high, # Upper bound of the 95% CI
n.c = N,
n.e = N.e,
data = results_cad,
pval = p.value
)
meta_analysis_cad_prot$N_label <- results_cad$N_label
meta_analysis_cad_prot$MR_dir <- results_cad$MR_dir
meta_analysis_t2d_prot <- metagen(
TE = estimate, # Effect size
seTE = std.error, # Standard errors of the effect sizes
studlab = term, # Study labels (terms)
byvar = depot, # Subgroup variable
sm = "HR", # Effect measure: Hazard Ratio
lower = conf.low, # Lower bound of the 95% CI
upper = conf.high, # Upper bound of the 95% CI
n.e = N.e,
n.c = N,
data = results_t2d,
pval = p.value
)
meta_analysis_t2d_prot$N_label <- results_t2d$N_label
meta_analysis_t2d_prot$MR_dir <- results_t2d$MR_dir
forest(x = meta_analysis_cad_prot,
common = FALSE,
random = FALSE,
overall = FALSE,
sortvar = TE, # sorts them by effect size
print.subgroup.hetstat = FALSE,  # Show heterogeneity for subgroups
print.overall.hetstat = FALSE,  # Hide overall heterogeneity test results
weight.study="same",
colgap=unit(7, "mm"), # gaps between each column
colgap.forest.left="10mm",
plotwidth=unit(6.5, "cm"),
big.mark = ",",
subgroup = FALSE, print.subgroup.name=FALSE, col.subgroup="black",
level=0.95,
smlab="", smlab.pos=0,
xlab="Hazard Ratio (95% CI)",
leftcols=c("studlab", "N_label"),
leftlabs=c("Exposure", "Number of events /\nTotal participants"),
#scientific.pval=FALSE, digits.pval=1, digits.pval.Q=1,
rightcols=c("effect", "ci", "p.value", "MR_dir"),
rightlabs=c("HR", "95% CI", "P-value", "MR effect"),
addrows.below.overall = 1
)
forest(x = meta_analysis_t2d_prot,
common = FALSE,
random = FALSE,
overall = FALSE,
sortvar = TE, # sorts them by effect size
print.subgroup.hetstat = FALSE,  # Show heterogeneity for subgroups
print.overall.hetstat = FALSE,  # Hide overall heterogeneity test results
weight.study="same",
colgap=unit(7, "mm"), # gaps between each column
colgap.forest.left="10mm",
plotwidth=unit(6.5, "cm"),
big.mark = ",",
subgroup = FALSE, print.subgroup.name=FALSE, col.subgroup="black",
level=0.95,
smlab="", smlab.pos=0,
xlab="Hazard Ratio (95% CI)",
leftcols=c("studlab", "N_label"),
leftlabs=c("Exposure", "Number of events /\nTotal participants"),
#scientific.pval=FALSE, digits.pval=1, digits.pval.Q=1,
rightcols=c("effect", "ci", "p.value", "MR_dir"),
rightlabs=c("HR", "95% CI", "P-value", "MR effect"),
addrows.below.overall = 1
)
